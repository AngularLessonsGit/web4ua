{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.effects.ts","./src/app/app.module.ts","./src/app/components/add-post/add-post.component.ts","./src/app/components/add-post/add-post.component.html","./src/app/components/auth/auth.component.ts","./src/app/components/auth/auth.component.html","./src/app/components/backend/backend.component.ts","./src/app/components/backend/backend.component.html","./src/app/components/css/css.component.ts","./src/app/components/css/css.component.html","./src/app/components/frontend/frontend.component.ts","./src/app/components/frontend/frontend.component.html","./src/app/components/html/html.component.ts","./src/app/components/html/html.component.html","./src/app/components/js/js.component.ts","./src/app/components/js/js.component.html","./src/app/components/modal/modal.component.ts","./src/app/components/modal/modal.component.html","./src/app/components/navigation/navigation.component.ts","./src/app/components/navigation/navigation.component.html","./src/app/directives/autofocus.directive.ts","./src/app/directives/mousedown-stop.directive.ts","./src/app/reducers/auth/auth.actions.ts","./src/app/reducers/auth/auth.reducer.ts","./src/app/reducers/auth/auth.selectors.ts","./src/app/reducers/index.ts","./src/app/services/error.service.ts","./src/app/services/local-storage.service.ts","./src/app/services/user.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import {NgModule} from '@angular/core';\nimport {Routes, RouterModule} from '@angular/router';\nimport {HtmlComponent} from './components/html/html.component';\nimport {CssComponent} from './components/css/css.component';\nimport {JsComponent} from './components/js/js.component';\nimport {AddPostComponent} from './components/add-post/add-post.component';\n\nconst routes: Routes = [\n  {path: '', component: HtmlComponent},\n  {path: 'css', component: CssComponent},\n  {path: 'js', component: JsComponent},\n  {path: 'add', component: AddPostComponent},\n  {path: '**', component: HtmlComponent}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule {\n}\n","import {Component} from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n}\n","<app-navigation></app-navigation>\r\n<app-auth></app-auth>\r\n<router-outlet></router-outlet>\r\n","import {Injectable} from '@angular/core';\nimport {Actions, Effect, ofType} from '@ngrx/effects';\nimport {catchError, map, switchMap} from 'rxjs/operators';\nimport {\n  authActionsType,\n  AuthExitCancelAction,\n  AuthExitSuccessAction,\n  AuthFormResetAction,\n  AuthHideAction,\n  AuthLoginAction,\n  AuthLoginErrorAction,\n  AuthLoginSuccessAction, AuthOpenLoginPageAction,\n  AuthRegisterUserAction,\n  AuthRegisterUserErrorAction,\n  AuthRemindPwdAction,\n  AuthRemindPwdSuccessAction\n} from './reducers/auth/auth.actions';\nimport {UserService} from './services/user.service';\nimport {ErrorService} from './services/error.service';\nimport {of} from 'rxjs';\nimport {NgbModal} from '@ng-bootstrap/ng-bootstrap';\nimport {ModalComponent} from './components/modal/modal.component';\nimport {LocalStorageService} from './services/local-storage.service';\n\n@Injectable()\nexport class AppEffects {\n  constructor(\n    private actions$: Actions,\n    private userService: UserService,\n    private errorService: ErrorService,\n    private modalService: NgbModal,\n    private localStorageService: LocalStorageService) {\n  }\n\n  @Effect()\n  login$() {\n    return this.actions$.pipe(\n      ofType(authActionsType.login),\n      switchMap((action: AuthLoginAction) => this.userService.fetchUser(action.payload)),\n      switchMap(res => {\n        const modalRef = this.modalService.open(ModalComponent, {backdrop: false});\n        if (res.message) {\n          modalRef.componentInstance.message = `${res.message}`;\n          return [new AuthLoginErrorAction()];\n        } else {\n          modalRef.componentInstance.message = `Вітаємо дома ${res.user.userName}`;\n          this.localStorageService.setItem('login', res.user.userName);\n          this.localStorageService.setItem('password', res.user.userPwd);\n          this.localStorageService.setItem('isAdmin', `${!!res.user.isAdmin}`);\n          return [\n            new AuthLoginSuccessAction(res.user),\n            new AuthFormResetAction(),\n            new AuthHideAction()\n          ];\n        }\n      }),\n      catchError(err => of(this.errorService.handleError(err)))\n    );\n  }\n\n  @Effect()\n  remind$() {\n    return this.actions$.pipe(\n      ofType(authActionsType.remindPwd),\n      switchMap((action: AuthRemindPwdAction) => this.userService.remind(action.payload)),\n      map(res => {\n        const modalRef = this.modalService.open(ModalComponent, {backdrop: false});\n        modalRef.componentInstance.message = res.message;\n        return new AuthRemindPwdSuccessAction();\n      }),\n      catchError(err => of(this.errorService.handleError(err)))\n    );\n  }\n\n  @Effect()\n  register$() {\n    return this.actions$.pipe(\n      ofType(authActionsType.register),\n      switchMap((action: AuthRegisterUserAction) => this.userService.register(action.payload)),\n      map(res => {\n        const modalRef = this.modalService.open(ModalComponent, {backdrop: false});\n        modalRef.componentInstance.message = res.message;\n        if (res.success) {\n          return new AuthOpenLoginPageAction();\n        } else {\n          return new AuthRegisterUserErrorAction();\n        }\n      }),\n      catchError(err => of(this.errorService.handleError(err)))\n    );\n  }\n\n  @Effect()\n  exit$() {\n    return this.actions$.pipe(\n      ofType(authActionsType.exit),\n      switchMap(() => {\n        const modalRef = this.modalService.open(ModalComponent, {backdrop: false});\n        modalRef.componentInstance.message = `Ви впевнені, що хочете вийти?`;\n        modalRef.componentInstance.isConfirmModal = true;\n        return modalRef.result;\n      }),\n      map((result) => {\n        if (result) {\n          this.localStorageService.removeItem('login');\n          this.localStorageService.removeItem('password');\n          this.localStorageService.removeItem('isAdmin');\n          return new AuthExitSuccessAction();\n        } else {\n          return new AuthExitCancelAction();\n        }\n      })\n    );\n  }\n}\n","import {BrowserModule} from '@angular/platform-browser';\nimport {NgModule} from '@angular/core';\nimport {StoreModule} from '@ngrx/store';\nimport {HttpClientModule} from '@angular/common/http';\nimport {EffectsModule} from '@ngrx/effects';\nimport {StoreDevtoolsModule} from '@ngrx/store-devtools';\nimport {StoreRouterConnectingModule} from '@ngrx/router-store';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {NgbModule} from '@ng-bootstrap/ng-bootstrap';\n\nimport {AppRoutingModule} from './app-routing.module';\nimport {AppComponent} from './app.component';\nimport {AuthComponent} from './components/auth/auth.component';\nimport {NavigationComponent} from './components/navigation/navigation.component';\nimport {CssComponent} from './components/css/css.component';\nimport {HtmlComponent} from './components/html/html.component';\nimport {JsComponent} from './components/js/js.component';\nimport {FrontendComponent} from './components/frontend/frontend.component';\nimport {BackendComponent} from './components/backend/backend.component';\nimport {environment} from '../environments/environment';\nimport {reducers, metaReducers} from './reducers';\nimport {AppEffects} from './app.effects';\nimport {ModalComponent} from './components/modal/modal.component';\nimport {MousedownStopDirective} from './directives/mousedown-stop.directive';\nimport {AutofocusDirective} from './directives/autofocus.directive';\nimport {AddPostComponent} from './components/add-post/add-post.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    AuthComponent,\n    NavigationComponent,\n    CssComponent,\n    HtmlComponent,\n    JsComponent,\n    FrontendComponent,\n    BackendComponent,\n    ModalComponent,\n    MousedownStopDirective,\n    AutofocusDirective,\n    AddPostComponent,\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    ReactiveFormsModule,\n    HttpClientModule,\n    StoreModule.forRoot(reducers, {\n      metaReducers,\n      runtimeChecks: {\n        strictStateImmutability: true,\n        strictActionImmutability: true,\n      }\n    }),\n    StoreDevtoolsModule.instrument({maxAge: 25, logOnly: environment.production}),\n    EffectsModule.forRoot([AppEffects]),\n    StoreRouterConnectingModule.forRoot(),\n    NgbModule,\n  ],\n  providers: [],\n  bootstrap: [\n    AppComponent\n  ]\n})\nexport class AppModule {\n}\n","import {Component, OnInit} from '@angular/core';\n\n@Component({\n  selector: 'app-add-post',\n  templateUrl: './add-post.component.html',\n  styleUrls: ['./add-post.component.scss']\n})\nexport class AddPostComponent implements OnInit {\n\n  constructor() {\n  }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>add-post works!</p>\n","import {Component, OnInit} from '@angular/core';\nimport {select, Store} from '@ngrx/store';\nimport {NgbModal} from '@ng-bootstrap/ng-bootstrap';\nimport {Observable} from 'rxjs';\nimport {FormControl, FormGroup, Validators} from '@angular/forms';\n\nimport {selectAuthPages, selectIsShowAuth} from '../../reducers/auth/auth.selectors';\nimport {\n  AuthFormResetSuccessAction,\n  AuthHideAction,\n  AuthLoginAction, AuthOpenLoginPageAction, AuthOpenRegisterPageAction, AuthOpenRemindPageAction, authPages,\n  AuthRegisterUserAction,\n  AuthRemindPwdAction\n} from '../../reducers/auth/auth.actions';\nimport {Tab} from '../../interfaces/tab';\nimport {AuthState} from '../../interfaces/auth-state';\nimport {ModalComponent} from '../modal/modal.component';\n\n@Component({\n  selector: 'app-auth',\n  templateUrl: './auth.component.html',\n  styleUrls: ['./auth.component.scss']\n})\nexport class AuthComponent implements OnInit {\n  public isShowAuth$: Observable<boolean> = this.store$.pipe(select(selectIsShowAuth));\n\n  form: FormGroup = new FormGroup({});\n\n  loginTabs = {\n    login: {\n      id: 1,\n      name: 'Авторизація',\n      button: 'Увійти'\n    },\n    register: {\n      id: 2,\n      name: 'Реєстрація',\n      button: 'Зареєструватись'\n    },\n    remind: {\n      id: 3,\n      name: 'Забули пароль',\n      button: 'Надіслати'\n    }\n  };\n\n  currentTab = {\n    tab: this.loginTabs.login\n  };\n\n  constructor(\n    private store$: Store<AuthState>,\n    private modalService: NgbModal,\n  ) {\n  }\n\n  ngOnInit() {\n    this.open(this.loginTabs.login);\n    this.store$.pipe(select(selectIsShowAuth))\n      .subscribe((status) => {\n        if (status) {\n          this.form.reset();\n          this.currentTab.tab = this.loginTabs.login;\n          this.store$.dispatch(new AuthFormResetSuccessAction());\n        }\n      });\n    this.store$.pipe(select(selectAuthPages))\n      .subscribe((page) => this.open(this.loginTabs[page]));\n  }\n\n  isActive(tab: Tab): boolean {\n    if (!tab) {\n      return;\n    }\n    return this.currentTab.tab === tab;\n  }\n\n  open(tab: Tab): void {\n    if (!tab) {\n      return;\n    }\n    this.currentTab.tab = tab;\n    this.form.reset();\n    this.form = new FormGroup({\n      userName: new FormControl('', [Validators.minLength(3), Validators.required]),\n      password: new FormControl('', this.currentTab.tab === this.loginTabs.login ||\n      this.currentTab.tab === this.loginTabs.register ? [Validators.minLength(3), Validators.required] : null),\n      confirmPassword: new FormControl('', this.currentTab.tab === this.loginTabs.register ?\n        [Validators.minLength(3), Validators.required] : null),\n      keyword: new FormControl('', this.currentTab.tab === this.loginTabs.register ||\n      this.currentTab.tab === this.loginTabs.remind ? [Validators.minLength(3), Validators.required] : null)\n    });\n  }\n\n  submit() {\n    if (!this.form.valid) {\n      const modalRef = this.modalService.open(ModalComponent, {backdrop: false});\n      modalRef.componentInstance.message = 'Форма заповнена невірно';\n      return modalRef;\n    }\n\n    switch (this.currentTab.tab) {\n      case this.loginTabs.login:\n        return this.login();\n      case this.loginTabs.register:\n        return this.register();\n      case this.loginTabs.remind:\n        return this.remind();\n    }\n  }\n\n  login(): void {\n    this.store$.dispatch(new AuthLoginAction({\n      userName: this.form.get('userName').value,\n      userPwd: this.form.get('password').value,\n    }));\n  }\n\n  register(): void {\n    if (this.form.get('password').value !== this.form.get('confirmPassword').value) {\n      const modalRef = this.modalService.open(ModalComponent, {backdrop: false});\n      modalRef.componentInstance.message = 'Паролі не співпадають';\n      return;\n    }\n    this.store$.dispatch(new AuthRegisterUserAction({\n      userName: this.form.get('userName').value,\n      userPwd: this.form.get('password').value,\n      keyword: this.form.get('keyword').value,\n    }));\n  }\n\n  remind() {\n    this.store$.dispatch(new AuthRemindPwdAction({\n      userName: this.form.get('userName').value,\n      keyword: this.form.get('keyword').value,\n    }));\n  }\n\n  hide(): void {\n    this.store$.dispatch(new AuthHideAction());\n    this.form.reset();\n  }\n\n  openLoginPage() {\n    this.store$.dispatch(new AuthOpenLoginPageAction());\n  }\n\n  openRemindPage() {\n    this.store$.dispatch(new AuthOpenRemindPageAction());\n  }\n\n  openRegisterPage() {\n    this.store$.dispatch(new AuthOpenRegisterPageAction());\n  }\n}\n","<div class=\"auth-container\" *ngIf=\"isShowAuth$ | async\" (mousedown)=\"hide()\" tabindex=\"0\">\n  <div class=\"form\" appMousedownStop>\n    <div class=\"header\">{{currentTab.tab.name}}</div>\n    <div class=\"body\">\n      <form [formGroup]=\"form\" (ngSubmit)=\"submit()\" (keydown.enter)=\"submit()\">\n        <input type=\"text\" class=\"inputs\" placeholder=\"ім'я\" formControlName=\"userName\" autocomplete=\"off\">\n        <div *ngIf=\"form.get('userName').invalid && (form.get('userName').touched || form.get('userName').dirty)\"\n             class=\"validate\">\n          <span *ngIf=\"form.get('userName').errors.required\" class=\"error-text\">Пусте поле</span>\n          <span *ngIf=\"form.get('userName').errors.minlength\" class=\"error-text\">Мінімум 3 символи</span>\n        </div>\n        <div *ngIf=\"(isActive(loginTabs.login) || isActive(loginTabs.register))\" class=\"grid\">\n          <input type=\"password\" class=\"inputs\"\n                 placeholder=\"пароль\" formControlName=\"password\" autocomplete=\"off\">\n          <div *ngIf=\"form.get('password').invalid && (form.get('password').touched || form.get('password').dirty)\"\n               class=\"validate\">\n            <span *ngIf=\"form.get('password').errors.required\" class=\"error-text\">Пусте поле</span>\n            <span *ngIf=\"form.get('password').errors.minlength\" class=\"error-text\">Мінімум 3 символи</span>\n          </div>\n        </div>\n        <div *ngIf=\"isActive(loginTabs.register)\" class=\"grid\">\n          <input type=\"password\" class=\"inputs\"\n                 placeholder=\"підтвердження пароля\" formControlName=\"confirmPassword\" autocomplete=\"off\">\n          <div\n            *ngIf=\"form.get('confirmPassword').invalid && (form.get('confirmPassword').touched || form.get('confirmPassword').dirty)\"\n            class=\"validate\">\n            <span *ngIf=\"form.get('confirmPassword').errors.required\" class=\"error-text\">Пусте поле</span>\n            <span *ngIf=\"form.get('confirmPassword').errors.minlength\" class=\"error-text\">Мінімум 3 символи</span>\n          </div>\n        </div>\n        <div *ngIf=\"isActive(loginTabs.register) || isActive(loginTabs.remind)\" class=\"grid\">\n          <input type=\"text\" class=\"inputs\"\n                 placeholder=\"слово-ключ\" formControlName=\"keyword\" autocomplete=\"off\">\n          <div *ngIf=\"form.get('keyword').invalid && (form.get('keyword').touched || form.get('keyword').dirty)\"\n               class=\"validate\">\n            <span *ngIf=\"form.get('keyword').errors.required\" class=\"error-text\">Пусте поле</span>\n            <span *ngIf=\"form.get('keyword').errors.minlength\" class=\"error-text\">Мінімум 3 символи</span>\n          </div>\n        </div>\n        <div class=\"navi-buttons\">\n          <span *ngIf=\"isActive(loginTabs.login) || isActive(loginTabs.register)\" class=\"func-text\"\n                (click)=\"openRemindPage()\">{{loginTabs.remind.name}}</span>\n          <span *ngIf=\"isActive(loginTabs.login) || isActive(loginTabs.remind)\" class=\"func-text\"\n                (click)=\"openRegisterPage()\">{{loginTabs.register.name}}</span>\n          <span *ngIf=\"isActive(loginTabs.register) || isActive(loginTabs.remind)\" class=\"func-text\"\n                (click)=\"openLoginPage()\">{{loginTabs.login.name}}</span>\n          <button type=\"submit\">{{currentTab.tab.button}}</button>\n        </div>\n      </form>\n    </div>\n  </div>\n</div>\n","import {Component, OnInit} from '@angular/core';\n\n@Component({\n  selector: 'app-backend',\n  templateUrl: './backend.component.html',\n  styleUrls: ['./backend.component.scss']\n})\nexport class BackendComponent implements OnInit {\n\n  constructor() {\n  }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>backend works!</p>\n","import {Component, OnInit} from '@angular/core';\n\n@Component({\n  selector: 'app-css',\n  templateUrl: './css.component.html',\n  styleUrls: ['./css.component.scss']\n})\nexport class CssComponent implements OnInit {\n\n  constructor() {\n  }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>css works!</p>\n","import {Component, OnInit} from '@angular/core';\n\n@Component({\n  selector: 'app-frontend',\n  templateUrl: './frontend.component.html',\n  styleUrls: ['./frontend.component.scss']\n})\nexport class FrontendComponent implements OnInit {\n\n  constructor() {\n  }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>frontend works!</p>\n","import {Component, OnInit} from '@angular/core';\n\n@Component({\n  selector: 'app-html',\n  templateUrl: './html.component.html',\n  styleUrls: ['./html.component.scss']\n})\nexport class HtmlComponent implements OnInit {\n\n  constructor() {\n  }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>html works!</p>\n","import {Component, OnInit} from '@angular/core';\n\n@Component({\n  selector: 'app-js',\n  templateUrl: './js.component.html',\n  styleUrls: ['./js.component.scss']\n})\nexport class JsComponent implements OnInit {\n\n  constructor() {\n  }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>js works!</p>\n","import {Component, Input, OnInit} from '@angular/core';\nimport {NgbActiveModal} from '@ng-bootstrap/ng-bootstrap';\n\n@Component({\n  selector: 'app-modal',\n  templateUrl: './modal.component.html',\n  styleUrls: ['./modal.component.scss']\n})\nexport class ModalComponent implements OnInit {\n  @Input() message: string;\n  @Input() isConfirmModal: boolean;\n\n  show = false;\n\n  constructor(\n    public activeModal: NgbActiveModal,\n  ) {\n  }\n\n  ngOnInit() {\n    this.show = true;\n  }\n\n  accept(): void {\n    this.activeModal.close(true);\n  }\n\n  cancel(): void {\n    this.activeModal.close(false);\n  }\n}\n","<div class='modal' (keydown.enter)=\"accept()\" tabindex=\"1\" appAutofocus>\n  <div class='modal-block' [ngClass]=\"{'modal-block-show': show}\">\n    <div class='modal-body'>\n      <span>{{message}}</span>\n    </div>\n    <div class='modal-buttons' [ngClass]=\"{'modal-two-buttons': isConfirmModal}\">\n      <input type=\"button\" value=\"Ok\" (click)=\"accept()\">\n      <input *ngIf=\"isConfirmModal\" type=\"button\" value=\"Скасувати\" (click)=\"cancel()\">\n    </div>\n  </div>\n</div>\n","import {Component, OnInit} from '@angular/core';\nimport {Store, select} from '@ngrx/store';\nimport {AuthExitAction, AuthLoginSuccessAction, AuthShowAction} from '../../reducers/auth/auth.actions';\nimport {AuthState} from '../../interfaces/auth-state';\nimport {Observable} from 'rxjs';\nimport {selectIsAdmin, selectIsLogin, selectUserName} from 'src/app/reducers/auth/auth.selectors';\nimport {LocalStorageService} from '../../services/local-storage.service';\nimport {User} from '../../interfaces/user';\n\n@Component({\n  selector: 'app-navigation',\n  templateUrl: './navigation.component.html',\n  styleUrls: ['./navigation.component.scss']\n})\nexport class NavigationComponent implements OnInit {\n  public name$: Observable<string> = this.store$.pipe(select(selectUserName));\n  public isLogin$: Observable<boolean> = this.store$.pipe(select(selectIsLogin));\n  public isAdmin$: Observable<boolean> = this.store$.pipe(select(selectIsAdmin));\n\n  showHideSubMenu = false;\n\n  constructor(\n    private store$: Store<AuthState>,\n    private localStorageService: LocalStorageService,\n  ) {\n  }\n\n  ngOnInit() {\n    if (this.localStorageService.getItem('login')) {\n      const user: User = {\n        userName: this.localStorageService.getItem('login'),\n        userPwd: this.localStorageService.getItem('password'),\n        isAdmin: !!this.localStorageService.getItem('isAdmin'),\n      };\n      this.store$.dispatch(new AuthLoginSuccessAction(user));\n    }\n  }\n\n  openAuth() {\n    this.store$.dispatch(new AuthShowAction());\n  }\n\n  exit() {\n    this.store$.dispatch(new AuthExitAction());\n    this.showHideSubMenu = false;\n  }\n\n}\n","<ul>\n  <li><a routerLinkActive=\"menu-active\" [routerLink]=\"['']\" [routerLinkActiveOptions]=\"{ exact: true }\">Html</a></li>\n  <li><a routerLinkActive=\"menu-active\" [routerLink]=\"['css']\">Css</a></li>\n  <li><a routerLinkActive=\"menu-active\" [routerLink]=\"['js']\">JavaScript</a></li>\n  <li *ngIf=\"!(isLogin$ | async)\"><a (click)=\"openAuth()\">Авторизація</a></li>\n  <li *ngIf=\"isLogin$ | async\" class=\"p-rel\">\n    <a (click)=\"showHideSubMenu = !showHideSubMenu\" [ngClass]=\"{'menu-active': showHideSubMenu}\">{{name$ | async}}</a>\n    <div *ngIf=\"showHideSubMenu\" class=\"auth-menu\">\n      <div *ngIf=\"isAdmin$ | async\" class=\"auth-menu-row\">\n        <a routerLinkActive=\"menu-active\" [routerLink]=\"['add']\" (click)=\"this.showHideSubMenu = false;\">Додати</a>\n      </div>\n      <div class=\"auth-menu-row\"><a [routerLink]=\"['']\" (click)=\"exit()\">Вихід</a></div>\n    </div>\n  </li>\n</ul>\n","import {Directive, ElementRef, Input, OnInit} from '@angular/core';\n\n@Directive({\n  selector: '[appAutofocus]'\n})\nexport class AutofocusDirective implements OnInit {\n\n  private autofocusRef;\n\n  constructor(private el: ElementRef) {\n  }\n\n  ngOnInit() {\n    if (this.autofocusRef || typeof this.autofocusRef === 'undefined') {\n      this.el.nativeElement.focus();\n    }\n  }\n\n  @Input() set autofocus(condition: boolean) {\n    this.autofocusRef = condition !== false;\n  }\n\n}\n","import {Directive, HostListener} from '@angular/core';\n\n@Directive({\n  selector: '[appMousedownStop]'\n})\nexport class MousedownStopDirective {\n\n  @HostListener('mousedown', ['$event'])\n  public onClick(event: any): void {\n    event.stopPropagation();\n  }\n\n}\n","import {Action} from '@ngrx/store';\r\n\r\nexport enum authActionsType {\r\n  show = '[AUTH] show',\r\n  hide = '[AUTH] hide',\r\n  login = '[AUTH] log in',\r\n  loginSuccess = '[AUTH] log in success',\r\n  loginError = '[AUTH] log in error',\r\n  exit = '[AUTH] exit',\r\n  exitSuccess = '[AUTH] exit success',\r\n  exitCancel = '[AUTH] exit cancel',\r\n  remindPwd = '[AUTH] remind password',\r\n  remindPwdSuccess = '[AUTH] remind password success',\r\n  formReset = '[AUTH] form reset',\r\n  formResetSuccess = '[AUTH] form reset success',\r\n  register = '[AUTH] register user',\r\n  registerSuccess = '[AUTH] register user success',\r\n  openLoginPage = '[AUTH] open login page',\r\n  openRemindPage = '[AUTH] open remind page',\r\n  openRegisterPage = '[AUTH] open register page',\r\n}\r\n\r\nexport enum authPages {\r\n  login = 'login',\r\n  remind = 'remind',\r\n  register = 'register',\r\n}\r\n\r\nexport class AuthShowAction implements Action {\r\n  readonly type = authActionsType.show;\r\n}\r\n\r\nexport class AuthHideAction implements Action {\r\n  readonly type = authActionsType.hide;\r\n}\r\n\r\nexport class AuthLoginAction implements Action {\r\n  readonly type = authActionsType.login;\r\n\r\n  constructor(public payload: {\r\n    userName: string;\r\n    userPwd: string;\r\n  }) {\r\n  }\r\n}\r\n\r\nexport class AuthLoginSuccessAction implements Action {\r\n  readonly type = authActionsType.loginSuccess;\r\n\r\n  constructor(public payload: {\r\n    userName: string;\r\n    userPwd: string;\r\n    isAdmin?: boolean;\r\n  }) {\r\n  }\r\n}\r\n\r\nexport class AuthLoginErrorAction implements Action {\r\n  readonly type = authActionsType.loginError;\r\n}\r\n\r\nexport class AuthExitAction implements Action {\r\n  readonly type = authActionsType.exit;\r\n}\r\n\r\nexport class AuthExitSuccessAction implements Action {\r\n  readonly type = authActionsType.exitSuccess;\r\n}\r\n\r\nexport class AuthExitCancelAction implements Action {\r\n  readonly type = authActionsType.exitCancel;\r\n}\r\n\r\nexport class AuthFormResetAction implements Action {\r\n  readonly type = authActionsType.formReset;\r\n}\r\n\r\nexport class AuthFormResetSuccessAction implements Action {\r\n  readonly type = authActionsType.formResetSuccess;\r\n}\r\n\r\nexport class AuthRemindPwdAction implements Action {\r\n  readonly type = authActionsType.remindPwd;\r\n\r\n  constructor(public payload: {\r\n    userName: string;\r\n    keyword: string;\r\n  }) {\r\n  }\r\n}\r\n\r\nexport class AuthRemindPwdSuccessAction implements Action {\r\n  readonly type = authActionsType.remindPwdSuccess;\r\n}\r\n\r\nexport class AuthRegisterUserAction implements Action {\r\n  readonly type = authActionsType.register;\r\n\r\n  constructor(public payload: {\r\n    userName: string;\r\n    userPwd: string;\r\n    keyword: string;\r\n  }) {\r\n  }\r\n}\r\n\r\nexport class AuthRegisterUserErrorAction implements Action {\r\n  readonly type = authActionsType.registerSuccess;\r\n}\r\n\r\nexport class AuthOpenLoginPageAction implements Action {\r\n  readonly type = authActionsType.openLoginPage;\r\n}\r\n\r\nexport class AuthOpenRemindPageAction implements Action {\r\n  readonly type = authActionsType.openRemindPage;\r\n}\r\n\r\nexport class AuthOpenRegisterPageAction implements Action {\r\n  readonly type = authActionsType.openRegisterPage;\r\n}\r\n\r\nexport type  AuthActions = AuthShowAction | AuthHideAction | AuthLoginAction | AuthLoginSuccessAction | AuthExitAction |\r\n  AuthFormResetAction | AuthFormResetSuccessAction | AuthExitSuccessAction | AuthLoginErrorAction | AuthExitCancelAction |\r\n  AuthRemindPwdAction | AuthRemindPwdSuccessAction | AuthRegisterUserAction | AuthRegisterUserErrorAction | AuthOpenLoginPageAction |\r\n  AuthOpenRemindPageAction | AuthOpenRegisterPageAction;\r\n","import {AuthActions, authActionsType, authPages} from './auth.actions';\r\nimport {AuthState} from '../../interfaces/auth-state';\r\n\r\nexport const authNode = 'auth';\r\n\r\nconst initialState: AuthState = {\r\n  isShowAuth: false,\r\n  isLogin: false,\r\n  userName: '',\r\n  userPwd: '',\r\n  isAdmin: false,\r\n  formReset: false,\r\n  currentPage: authPages.login,\r\n};\r\n\r\nexport const authReducer = (state = initialState, action: AuthActions) => {\r\n  switch (action.type) {\r\n    case authActionsType.show:\r\n      return {\r\n        ...state,\r\n        isShowAuth: true\r\n      };\r\n    case authActionsType.hide:\r\n      return {\r\n        ...state,\r\n        isShowAuth: false\r\n      };\r\n    case authActionsType.loginSuccess:\r\n      return {\r\n        ...state,\r\n        isLogin: true,\r\n        userName: action.payload.userName,\r\n        userPwd: action.payload.userPwd,\r\n        isAdmin: action.payload.isAdmin,\r\n      };\r\n    case authActionsType.exitSuccess:\r\n      return {\r\n        ...state,\r\n        isLogin: false,\r\n        userName: '',\r\n        userPwd: '',\r\n        isAdmin: false,\r\n      };\r\n    case authActionsType.formReset:\r\n      return {\r\n        ...state,\r\n        formReset: true\r\n      };\r\n    case authActionsType.formResetSuccess:\r\n      return {\r\n        ...state,\r\n        formReset: false\r\n      };\r\n    case authActionsType.openLoginPage:\r\n      return {\r\n        ...state,\r\n        currentPage: authPages.login,\r\n      };\r\n    case authActionsType.openRegisterPage:\r\n      return {\r\n        ...state,\r\n        currentPage: authPages.register,\r\n      };\r\n    case authActionsType.openRemindPage:\r\n      return {\r\n        ...state,\r\n        currentPage: authPages.remind,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import {createFeatureSelector, createSelector} from '@ngrx/store';\r\nimport {authNode} from './auth.reducer';\r\nimport {AuthState} from '../../interfaces/auth-state';\r\nimport {authPages} from './auth.actions';\r\n\r\nexport const selectAuthFeature = createFeatureSelector<AuthState>(authNode);\r\n\r\nexport const selectIsShowAuth = createSelector(\r\n  selectAuthFeature,\r\n  (state: AuthState): boolean => state.isShowAuth\r\n);\r\n\r\nexport const selectIsLogin = createSelector(\r\n  selectAuthFeature,\r\n  (state: AuthState): boolean => state.isLogin\r\n);\r\n\r\nexport const selectUserName = createSelector(\r\n  selectAuthFeature,\r\n  (state: AuthState): string => state.userName\r\n);\r\n\r\nexport const selectUserPwd = createSelector(\r\n  selectAuthFeature,\r\n  (state: AuthState): string => state.userPwd\r\n);\r\n\r\nexport const selectIsAdmin = createSelector(\r\n  selectAuthFeature,\r\n  (state: AuthState): boolean => state.isAdmin\r\n);\r\n\r\nexport const selectFormReset = createSelector(\r\n  selectAuthFeature,\r\n  (state: AuthState): boolean => state.formReset\r\n);\r\n\r\nexport const selectAuthPages = createSelector(\r\n  selectAuthFeature,\r\n  (state: AuthState): authPages => state.currentPage\r\n);\r\n","import {\n  ActionReducerMap,\n  MetaReducer\n} from '@ngrx/store';\nimport {environment} from '../../environments/environment';\nimport {authReducer, authNode} from './auth/auth.reducer';\nimport {AuthState} from '../interfaces/auth-state';\n\n\nexport interface State {\n  [authNode]: AuthState;\n}\n\nexport const reducers: ActionReducerMap<State> = {\n  [authNode]: authReducer,\n};\n\n\nexport const metaReducers: MetaReducer<State>[] = !environment.production ? [] : [];\n","import {Injectable} from '@angular/core';\r\nimport {HttpClient, HttpErrorResponse} from '@angular/common/http';\r\nimport {throwError} from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ErrorService {\r\n  constructor(private http: HttpClient) {\r\n  }\r\n\r\n  handleError(error: HttpErrorResponse) {\r\n    if (error.error instanceof ErrorEvent) {\r\n      // A client-side or network error occurred. Handle it accordingly.\r\n      console.error('An error occurred:', error.error.message);\r\n    } else {\r\n      // The backend returned an unsuccessful response code.\r\n      // The response body may contain clues as to what went wrong.\r\n      console.error(\r\n        `Backend returned code ${error.status}, ` +\r\n        `body was: ${error.error}`);\r\n    }\r\n    // Return an observable with a user-facing error message.\r\n    return throwError(\r\n      'Something bad happened; please try again later.');\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LocalStorageService {\n\n  constructor() { }\n\n  getItem(key: string) {\n    if (!key) {\n      return;\n    }\n    return localStorage.getItem(key);\n  }\n\n  setItem(key: string, value: string) {\n    if (!key || !value) {\n      return;\n    }\n    localStorage.setItem(key, value);\n  }\n\n  removeItem(key: string) {\n    if (!key) {\n      return;\n    }\n    localStorage.removeItem(key);\n  }\n\n  clear() {\n    localStorage.clear();\n  }\n}\n","import {HttpClient} from '@angular/common/http';\r\nimport {User} from '../interfaces/user';\r\nimport {Observable} from 'rxjs';\r\nimport {Injectable} from '@angular/core';\r\nimport {UserResponse} from '../interfaces/user-response';\r\nimport {UserForgot} from '../interfaces/user-forgot';\r\nimport {UserRegister} from '../interfaces/user-register';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class UserService {\r\n  constructor(private http: HttpClient) {\r\n  }\r\n\r\n  fetchUser(user: User): Observable<UserResponse> {\r\n    return this.http.post<UserResponse>('/user', user);\r\n  }\r\n\r\n  remind(user: UserForgot): Observable<UserResponse> {\r\n    return this.http.post<UserResponse>('/remind', user);\r\n  }\r\n\r\n  register(user: UserRegister): Observable<UserResponse> {\r\n    return this.http.post<UserResponse>('/registerUser', user);\r\n  }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import {enableProdMode} from '@angular/core';\nimport {platformBrowserDynamic} from '@angular/platform-browser-dynamic';\n\nimport {AppModule} from './app/app.module';\nimport {environment} from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}